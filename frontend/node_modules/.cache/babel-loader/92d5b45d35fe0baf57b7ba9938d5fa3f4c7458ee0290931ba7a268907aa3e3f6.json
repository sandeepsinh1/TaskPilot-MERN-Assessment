{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajput\\\\Downloads\\\\TaskPilott\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport API from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  // 1. Initialize user state from localStorage (Correctly using functional initializer)\n  const [user, setUser] = useState(() => {\n    const storedUser = localStorage.getItem('user');\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n\n  // ⭐️ 2. NEW: Introduce a loading state, initially true\n  const [loading, setLoading] = useState(true);\n\n  // Effect to sync user state with localStorage and handle initial load\n  useEffect(() => {\n    // ⭐️ Set loading to false once the component has mounted and user state is initialized\n    setLoading(false);\n    if (user) {\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', user.token);\n    } else {\n      localStorage.removeItem('user');\n      localStorage.removeItem('token');\n    }\n  }, [user]); // Runs after the initial render and whenever 'user' changes\n\n  const logout = () => {\n    // API.post('/auth/logout'); \n    setUser(null);\n  };\n  const contextValue = {\n    user,\n    setUser,\n    logout,\n    isAuthenticated: !!user,\n    loading // ⭐️ Export the loading state\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"yesBbuv3v0BUH3agqbbuPBSgS4A=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","API","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","loading","setLoading","setItem","stringify","token","removeItem","logout","contextValue","isAuthenticated","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Rajput/Downloads/TaskPilott/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\r\nimport API from '../api'; \r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  // 1. Initialize user state from localStorage (Correctly using functional initializer)\r\n  const [user, setUser] = useState(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    return storedUser ? JSON.parse(storedUser) : null;\r\n  });\r\n\r\n  // ⭐️ 2. NEW: Introduce a loading state, initially true\r\n  const [loading, setLoading] = useState(true); \r\n\r\n  // Effect to sync user state with localStorage and handle initial load\r\n  useEffect(() => {\r\n    // ⭐️ Set loading to false once the component has mounted and user state is initialized\r\n    setLoading(false); \r\n    \r\n    if (user) {\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      localStorage.setItem('token', user.token); \r\n    } else {\r\n      localStorage.removeItem('user');\r\n      localStorage.removeItem('token');\r\n    }\r\n  }, [user]); // Runs after the initial render and whenever 'user' changes\r\n\r\n  const logout = () => {\r\n    // API.post('/auth/logout'); \r\n    setUser(null);\r\n  };\r\n\r\n  const contextValue = {\r\n    user,\r\n    setUser,\r\n    logout,\r\n    isAuthenticated: !!user,\r\n    loading, // ⭐️ Export the loading state\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,MAAM;IACrC,MAAMW,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,IAAI;EACnD,CAAC,CAAC;;EAEF;EACA,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd;IACAgB,UAAU,CAAC,KAAK,CAAC;IAEjB,IAAIR,IAAI,EAAE;MACRG,YAAY,CAACM,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACK,SAAS,CAACV,IAAI,CAAC,CAAC;MAClDG,YAAY,CAACM,OAAO,CAAC,OAAO,EAAET,IAAI,CAACW,KAAK,CAAC;IAC3C,CAAC,MAAM;MACLR,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;MAC/BT,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAClC;EACF,CAAC,EAAE,CAACZ,IAAI,CAAC,CAAC,CAAC,CAAC;;EAEZ,MAAMa,MAAM,GAAGA,CAAA,KAAM;IACnB;IACAZ,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMa,YAAY,GAAG;IACnBd,IAAI;IACJC,OAAO;IACPY,MAAM;IACNE,eAAe,EAAE,CAAC,CAACf,IAAI;IACvBO,OAAO,CAAE;EACX,CAAC;EAED,oBACEZ,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAEH,YAAa;IAAAhB,QAAA,EACvCA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACtB,EAAA,CA1CWF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}