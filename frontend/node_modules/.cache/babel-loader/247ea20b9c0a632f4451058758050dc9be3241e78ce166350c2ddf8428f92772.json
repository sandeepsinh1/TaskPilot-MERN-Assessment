{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajput\\\\Downloads\\\\TaskPilott\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport API from '../api'; // Used for logout (optional, but good practice)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  // Initialize user state from localStorage\n  const [user, setUser] = useState(() => {\n    const storedUser = localStorage.getItem('user');\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n\n  // Effect to sync user state with localStorage whenever user changes\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem('user', JSON.stringify(user));\n      // Assuming your login response includes a 'token' property:\n      localStorage.setItem('token', user.token);\n    } else {\n      localStorage.removeItem('user');\n      localStorage.removeItem('token');\n    }\n  }, [user]);\n\n  // Logout function (calls backend to invalidate token if necessary)\n  const logout = () => {\n    // API.post('/auth/logout'); // Optional: If your backend has a logout endpoint\n    setUser(null);\n  };\n  const contextValue = {\n    user,\n    setUser,\n    logout,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"iZSKBR5FIuZcfwVKZnfcxoswVEY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","API","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","setItem","stringify","token","removeItem","logout","contextValue","isAuthenticated","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Rajput/Downloads/TaskPilott/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\r\nimport API from '../api'; // Used for logout (optional, but good practice)\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  // Initialize user state from localStorage\r\n  const [user, setUser] = useState(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    return storedUser ? JSON.parse(storedUser) : null;\r\n  });\r\n\r\n  // Effect to sync user state with localStorage whenever user changes\r\n  useEffect(() => {\r\n    if (user) {\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      // Assuming your login response includes a 'token' property:\r\n      localStorage.setItem('token', user.token); \r\n    } else {\r\n      localStorage.removeItem('user');\r\n      localStorage.removeItem('token');\r\n    }\r\n  }, [user]);\r\n\r\n  // Logout function (calls backend to invalidate token if necessary)\r\n  const logout = () => {\r\n    // API.post('/auth/logout'); // Optional: If your backend has a logout endpoint\r\n    setUser(null);\r\n  };\r\n\r\n  const contextValue = {\r\n    user,\r\n    setUser,\r\n    logout,\r\n    isAuthenticated: !!user,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,GAAG,MAAM,QAAQ,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,MAAM;IACrC,MAAMW,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,IAAI;EACnD,CAAC,CAAC;;EAEF;EACAV,SAAS,CAAC,MAAM;IACd,IAAIQ,IAAI,EAAE;MACRG,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEF,IAAI,CAACG,SAAS,CAACR,IAAI,CAAC,CAAC;MAClD;MACAG,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEP,IAAI,CAACS,KAAK,CAAC;IAC3C,CAAC,MAAM;MACLN,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;MAC/BP,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAClC;EACF,CAAC,EAAE,CAACV,IAAI,CAAC,CAAC;;EAEV;EACA,MAAMW,MAAM,GAAGA,CAAA,KAAM;IACnB;IACAV,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMW,YAAY,GAAG;IACnBZ,IAAI;IACJC,OAAO;IACPU,MAAM;IACNE,eAAe,EAAE,CAAC,CAACb;EACrB,CAAC;EAED,oBACEL,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAEH,YAAa;IAAAd,QAAA,EACvCA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACpB,EAAA,CArCWF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}