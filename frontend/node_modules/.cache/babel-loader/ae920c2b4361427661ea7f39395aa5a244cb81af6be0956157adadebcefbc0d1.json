{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajput\\\\Downloads\\\\TaskPilott\\\\frontend\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport TaskList from './TaskList';\nimport { TaskContext } from '../context/TaskContext';\nimport { AuthContext } from '../context/AuthContext';\nimport API from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormState = {\n  title: '',\n  description: '',\n  assignedTo: '',\n  // ID of the employee\n  status: 'To Do',\n  dueDate: ''\n};\nexport default function AdminDashboard() {\n  _s();\n  const {\n    tasks,\n    fetchTasks\n  } = useContext(TaskContext);\n  const {\n    user,\n    logout\n  } = useContext(AuthContext);\n  const [taskForm, setTaskForm] = useState(initialFormState);\n  const [employees, setEmployees] = useState([]); // To store list of users for assignment\n\n  // Placeholder function to fetch list of users/employees\n  // You need a backend endpoint like GET /users/employees for this to work\n  // useEffect(() => {\n  //   API.get('/users/employees').then(res => setEmployees(res.data)).catch(console.error);\n  // }, []); \n\n  // --- Temporary mock employees for demonstration ---\n  const mockEmployees = [{\n    _id: '60c72b2f9a7b9e0015f3f4e2',\n    name: 'Employee One'\n  }, {\n    _id: '60c72b2f9a7b9e0015f3f4e3',\n    name: 'Employee Two'\n  }];\n  // -------------------------------------------------\n\n  const handleChange = e => {\n    setTaskForm({\n      ...taskForm,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleCreateTask = async e => {\n    e.preventDefault();\n    try {\n      await API.post('/tasks', taskForm); // Use your existing createTask endpoint\n      alert('Task created successfully!');\n      setTaskForm(initialFormState);\n      fetchTasks(); // Refresh the list of tasks\n    } catch (err) {\n      var _err$response, _err$response$data;\n      alert(`Failed to create task: ${((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Server error'}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Admin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginRight: '20px'\n          },\n          children: [\"Welcome, Admin: \", (user === null || user === void 0 ? void 0 : user.name) || (user === null || user === void 0 ? void 0 : user.email)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logout,\n          style: {\n            padding: '8px 15px',\n            cursor: 'pointer'\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateTask,\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr 1fr 1fr 1fr 1fr',\n        gap: '10px',\n        marginBottom: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        placeholder: \"Title\",\n        value: taskForm.title,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"description\",\n        placeholder: \"Description\",\n        value: taskForm.description,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"assignedTo\",\n        value: taskForm.assignedTo,\n        onChange: handleChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Assign To...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), mockEmployees.map(emp =>\n        /*#__PURE__*/\n        // Use 'employees' state here if fetching users\n        _jsxDEV(\"option\", {\n          value: emp._id,\n          children: emp.name\n        }, emp._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"status\",\n        value: taskForm.status,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"To Do\",\n          children: \"To Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"In Progress\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Done\",\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"dueDate\",\n        value: taskForm.dueDate,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          backgroundColor: '#28a745',\n          color: 'white',\n          border: 'none',\n          cursor: 'pointer'\n        },\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      isAdmin: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"gOF0z9JGUOmnugLrxQZ4De21p58=\");\n_c = AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useContext","useState","TaskList","TaskContext","AuthContext","API","jsxDEV","_jsxDEV","initialFormState","title","description","assignedTo","status","dueDate","AdminDashboard","_s","tasks","fetchTasks","user","logout","taskForm","setTaskForm","employees","setEmployees","mockEmployees","_id","name","handleChange","e","target","value","handleCreateTask","preventDefault","post","alert","err","_err$response","_err$response$data","response","data","message","style","padding","children","display","justifyContent","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","marginRight","email","onClick","cursor","onSubmit","gridTemplateColumns","gap","marginBottom","placeholder","onChange","required","map","emp","type","backgroundColor","color","border","isAdmin","_c","$RefreshReg$"],"sources":["C:/Users/Rajput/Downloads/TaskPilott/frontend/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport TaskList from './TaskList';\r\nimport { TaskContext } from '../context/TaskContext';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport API from '../api';\r\n\r\nconst initialFormState = {\r\n  title: '',\r\n  description: '',\r\n  assignedTo: '', // ID of the employee\r\n  status: 'To Do',\r\n  dueDate: '',\r\n};\r\n\r\nexport default function AdminDashboard() {\r\n  const { tasks, fetchTasks } = useContext(TaskContext);\r\n  const { user, logout } = useContext(AuthContext);\r\n  const [taskForm, setTaskForm] = useState(initialFormState);\r\n  const [employees, setEmployees] = useState([]); // To store list of users for assignment\r\n\r\n  // Placeholder function to fetch list of users/employees\r\n  // You need a backend endpoint like GET /users/employees for this to work\r\n  // useEffect(() => {\r\n  //   API.get('/users/employees').then(res => setEmployees(res.data)).catch(console.error);\r\n  // }, []); \r\n\r\n  // --- Temporary mock employees for demonstration ---\r\n  const mockEmployees = [\r\n    { _id: '60c72b2f9a7b9e0015f3f4e2', name: 'Employee One' },\r\n    { _id: '60c72b2f9a7b9e0015f3f4e3', name: 'Employee Two' },\r\n  ];\r\n  // -------------------------------------------------\r\n\r\n\r\n  const handleChange = (e) => {\r\n    setTaskForm({ ...taskForm, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleCreateTask = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await API.post('/tasks', taskForm); // Use your existing createTask endpoint\r\n      alert('Task created successfully!');\r\n      setTaskForm(initialFormState);\r\n      fetchTasks(); // Refresh the list of tasks\r\n    } catch (err) {\r\n      alert(`Failed to create task: ${err.response?.data?.message || 'Server error'}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <h1>Admin Dashboard</h1>\r\n        <div>\r\n          <span style={{ marginRight: '20px' }}>Welcome, Admin: {user?.name || user?.email}</span>\r\n          <button onClick={logout} style={{ padding: '8px 15px', cursor: 'pointer' }}>\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n\r\n      {/* --- Task Creation Form --- */}\r\n      <h3>Create New Task</h3>\r\n      <form onSubmit={handleCreateTask} style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr 1fr 1fr 1fr', gap: '10px', marginBottom: '30px' }}>\r\n        <input name=\"title\" placeholder=\"Title\" value={taskForm.title} onChange={handleChange} required />\r\n        <input name=\"description\" placeholder=\"Description\" value={taskForm.description} onChange={handleChange} required />\r\n        \r\n        <select name=\"assignedTo\" value={taskForm.assignedTo} onChange={handleChange} required>\r\n          <option value=\"\">Assign To...</option>\r\n          {mockEmployees.map(emp => ( // Use 'employees' state here if fetching users\r\n            <option key={emp._id} value={emp._id}>{emp.name}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <select name=\"status\" value={taskForm.status} onChange={handleChange}>\r\n          <option value=\"To Do\">To Do</option>\r\n          <option value=\"In Progress\">In Progress</option>\r\n          <option value=\"Done\">Done</option>\r\n        </select>\r\n\r\n        <input type=\"date\" name=\"dueDate\" value={taskForm.dueDate} onChange={handleChange} required />\r\n        \r\n        <button type=\"submit\" style={{ backgroundColor: '#28a745', color: 'white', border: 'none', cursor: 'pointer' }}>\r\n          Create Task\r\n        </button>\r\n      </form>\r\n\r\n      {/* --- Task List View --- */}\r\n      <TaskList tasks={tasks} isAdmin={true} />\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}