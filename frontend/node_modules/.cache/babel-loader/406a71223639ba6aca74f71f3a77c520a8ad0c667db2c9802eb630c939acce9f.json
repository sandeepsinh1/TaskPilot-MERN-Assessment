{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajput\\\\Downloads\\\\TaskPilott\\\\frontend\\\\src\\\\context\\\\TaskContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect, useContext } from 'react';\nimport API from '../api';\nimport { AuthContext } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskContext = /*#__PURE__*/createContext();\nexport const TaskProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const getConfig = () => {\n    const token = localStorage.getItem('token');\n    if (!token) return {};\n    return {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    };\n  };\n  const fetchTasks = async () => {\n    if (!user) {\n      setTasks([]);\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await API.get('/tasks', getConfig());\n      setTasks(res.data);\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response2, _err$response2$data;\n      console.error('Error fetching tasks:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Failed to fetch tasks.');\n      setTasks([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, [user]);\n  const updateTaskStatus = async (taskId, status) => {\n    try {\n      const res = await API.patch(`/tasks/${taskId}/status`, {\n        status\n      }, getConfig());\n      setTasks(prevTasks => prevTasks.map(task => task._id === taskId ? {\n        ...task,\n        status: res.data.status\n      } : task));\n      return res.data;\n    } catch (err) {\n      console.error('Error updating task status:', err);\n      throw err;\n    }\n  };\n  const contextValue = {\n    tasks,\n    loading,\n    error,\n    fetchTasks,\n    updateTaskStatus,\n    setTasks\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 10\n  }, this);\n};\n_s(TaskProvider, \"kbcWG4tsKFuCzpSjKdjZSpLE1IE=\");\n_c = TaskProvider;\nvar _c;\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useContext","API","AuthContext","jsxDEV","_jsxDEV","TaskContext","TaskProvider","children","_s","user","tasks","setTasks","loading","setLoading","error","setError","getConfig","token","localStorage","getItem","headers","Authorization","fetchTasks","res","get","data","err","_err$response","_err$response$data","_err$response2","_err$response2$data","console","response","message","updateTaskStatus","taskId","status","patch","prevTasks","map","task","_id","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Rajput/Downloads/TaskPilott/frontend/src/context/TaskContext.js"],"sourcesContent":["import { createContext, useState, useEffect, useContext } from 'react';\r\nimport API from '../api';\r\nimport { AuthContext } from './AuthContext';\r\n\r\nexport const TaskContext = createContext();\r\n\r\nexport const TaskProvider = ({ children }) => {\r\n  const { user } = useContext(AuthContext);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const getConfig = () => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) return {};\r\n    return {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n  };\r\n\r\n  const fetchTasks = async () => {\r\n    if (!user) {\r\n      setTasks([]);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const res = await API.get('/tasks', getConfig());\r\n      setTasks(res.data);\r\n    } catch (err) {\r\n      console.error('Error fetching tasks:', err.response?.data?.message || err);\r\n      setError(err.response?.data?.message || 'Failed to fetch tasks.');\r\n      setTasks([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, [user]);\r\n\r\n  const updateTaskStatus = async (taskId, status) => {\r\n    try {\r\n      const res = await API.patch(`/tasks/${taskId}/status`, { status }, getConfig());\r\n      setTasks((prevTasks) =>\r\n        prevTasks.map((task) =>\r\n          task._id === taskId ? { ...task, status: res.data.status } : task\r\n        )\r\n      );\r\n      return res.data;\r\n    } catch (err) {\r\n      console.error('Error updating task status:', err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const contextValue = {\r\n    tasks,\r\n    loading,\r\n    error,\r\n    fetchTasks,\r\n    updateTaskStatus,\r\n    setTasks,\r\n  };\r\n\r\n  return <TaskContext.Provider value={contextValue}>{children}</TaskContext.Provider>;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}